//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: CampusService.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Api_CampusClient`, then call methods of this protocol to make API calls.
public protocol Api_CampusClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Api_CampusClientInterceptorFactoryProtocol? { get }

  func getTopNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply>

  func getNewsSources(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray>

  func searchRooms(
    _ request: Api_SearchRoomsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_SearchRoomsRequest, Api_SearchRoomsReply>

  func getLocations(
    _ request: Api_GetLocationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetLocationsRequest, Api_GetLocationsReply>

  func getRoomMaps(
    _ request: Api_GetRoomMapsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetRoomMapsRequest, Api_GetRoomMapsReply>

  func getRoomCoordinates(
    _ request: Api_GetRoomCoordinatesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply>

  func getRoomSchedule(
    _ request: Api_GetRoomScheduleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply>

  func getCafeteriaRatings(
    _ request: Api_CafeteriaRatingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply>

  func getDishRatings(
    _ request: Api_DishRatingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_DishRatingRequest, Api_DishRatingReply>

  func newCafeteriaRating(
    _ request: Api_NewCafeteriaRatingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func newDishRating(
    _ request: Api_NewDishRatingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getAvailableDishTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func getNameTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func getAvailableCafeteriaTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func getCafeterias(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply>

  func getDishes(
    _ request: Api_GetDishesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetDishesRequest, Api_GetDishesReply>

  func getResponsiblePerson(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply>

  func getBuilding2Gps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply>

  func getAreaFacilitiesByBuildingNr(
    _ request: Api_GetAreaFacilitiesByBuildingNrRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply>

  func getListOfToilets(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply>

  func getListOfElevators(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply>

  func getMoreInformation(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply>

  func getOpeningTimes(
    _ request: Api_GetOpeningTimesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply>

  func getUpdateNote(
    _ request: Api_GetUpdateNoteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply>

  func getStudyRoomList(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply>

  func getEventList(
    _ request: Api_GetEventListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetEventListRequest, Api_GetEventListReply>

  func getKino(
    _ request: Api_GetKinoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetKinoRequest, Api_GetKinoReply>

  func sendFeedback(
    _ request: Api_SendFeedbackRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_SendFeedbackRequest, Api_SendFeedbackImageReply>

  func sendFeedbackImage(
    _ request: Api_SendFeedbackImageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply>

  func registerDevice(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func verifyKey(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func deviceUploadGcmToken(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func getUploadStatus(
    _ request: Api_GetUploadStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetUploadStatusRequest, Api_GetUploadStatusReply>

  func getNotification(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_NotificationsRequest, Api_GetNotificationsReply>

  func getNotificationConfirm(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_NotificationsRequest, Api_GetNotificationsConfirmReply>

  func getMembers(
    _ request: Api_GetMembersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetMembersRequest, Api_GetMembersReply>

  func registerIOSDevice(
    _ request: Api_RegisterIOSDeviceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply>

  func removeIOSDevice(
    _ request: Api_RemoveIOSDeviceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply>

  func addIOSDeviceUsage(
    _ request: Api_AddIOSDeviceUsageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply>
}

extension Api_CampusClientProtocol {
  public var serviceName: String {
    return "api.Campus"
  }

  /// Unary call to GetTopNews
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTopNews.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTopNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getTopNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopNewsInterceptors() ?? []
    )
  }

  /// Unary call to GetNewsSources
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNewsSources.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNewsSources(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNewsSources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsSourcesInterceptors() ?? []
    )
  }

  /// Unary call to SearchRooms
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchRooms.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchRooms(
    _ request: Api_SearchRoomsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_SearchRoomsRequest, Api_SearchRoomsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.searchRooms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchRoomsInterceptors() ?? []
    )
  }

  /// a location is a campus location/building, e.g. "Garching Forschungszentrum"
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLocations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLocations(
    _ request: Api_GetLocationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetLocationsRequest, Api_GetLocationsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getLocations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocationsInterceptors() ?? []
    )
  }

  /// Unary call to GetRoomMaps
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRoomMaps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRoomMaps(
    _ request: Api_GetRoomMapsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetRoomMapsRequest, Api_GetRoomMapsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomMaps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomMapsInterceptors() ?? []
    )
  }

  /// Unary call to GetRoomCoordinates
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRoomCoordinates.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRoomCoordinates(
    _ request: Api_GetRoomCoordinatesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomCoordinates.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomCoordinatesInterceptors() ?? []
    )
  }

  /// Unary call to GetRoomSchedule
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRoomSchedule.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRoomSchedule(
    _ request: Api_GetRoomScheduleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomSchedule.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomScheduleInterceptors() ?? []
    )
  }

  /// This endpoint retrieves Cafeteria Ratings from the Backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCafeteriaRatings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCafeteriaRatings(
    _ request: Api_CafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeteriaRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriaRatingsInterceptors() ?? []
    )
  }

  /// Unary call to GetDishRatings
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDishRatings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDishRatings(
    _ request: Api_DishRatingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_DishRatingRequest, Api_DishRatingReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishRatingsInterceptors() ?? []
    )
  }

  /// Unary call to NewCafeteriaRating
  ///
  /// - Parameters:
  ///   - request: Request to send to NewCafeteriaRating.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func newCafeteriaRating(
    _ request: Api_NewCafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.newCafeteriaRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewCafeteriaRatingInterceptors() ?? []
    )
  }

  /// Unary call to NewDishRating
  ///
  /// - Parameters:
  ///   - request: Request to send to NewDishRating.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func newDishRating(
    _ request: Api_NewDishRatingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.newDishRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewDishRatingInterceptors() ?? []
    )
  }

  /// Unary call to GetAvailableDishTags
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAvailableDishTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAvailableDishTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableDishTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableDishTagsInterceptors() ?? []
    )
  }

  /// Unary call to GetNameTags
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNameTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNameTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNameTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNameTagsInterceptors() ?? []
    )
  }

  /// Unary call to GetAvailableCafeteriaTags
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAvailableCafeteriaTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAvailableCafeteriaTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableCafeteriaTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableCafeteriaTagsInterceptors() ?? []
    )
  }

  /// Unary call to GetCafeterias
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCafeterias.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCafeterias(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeterias.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriasInterceptors() ?? []
    )
  }

  /// Unary call to GetDishes
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDishes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDishes(
    _ request: Api_GetDishesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetDishesRequest, Api_GetDishesReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishesInterceptors() ?? []
    )
  }

  /// Unary call to GetResponsiblePerson
  ///
  /// - Parameters:
  ///   - request: Request to send to GetResponsiblePerson.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getResponsiblePerson(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getResponsiblePerson.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResponsiblePersonInterceptors() ?? []
    )
  }

  /// Unary call to GetBuilding2Gps
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBuilding2Gps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBuilding2Gps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getBuilding2Gps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBuilding2GpsInterceptors() ?? []
    )
  }

  /// Unary call to GetAreaFacilitiesByBuildingNr
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAreaFacilitiesByBuildingNr.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAreaFacilitiesByBuildingNr(
    _ request: Api_GetAreaFacilitiesByBuildingNrRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAreaFacilitiesByBuildingNr.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAreaFacilitiesByBuildingNrInterceptors() ?? []
    )
  }

  /// Unary call to GetListOfToilets
  ///
  /// - Parameters:
  ///   - request: Request to send to GetListOfToilets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getListOfToilets(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfToilets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfToiletsInterceptors() ?? []
    )
  }

  /// Unary call to GetListOfElevators
  ///
  /// - Parameters:
  ///   - request: Request to send to GetListOfElevators.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getListOfElevators(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfElevators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfElevatorsInterceptors() ?? []
    )
  }

  /// Unary call to GetMoreInformation
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMoreInformation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getMoreInformation(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMoreInformation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMoreInformationInterceptors() ?? []
    )
  }

  /// Unary call to GetOpeningTimes
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOpeningTimes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOpeningTimes(
    _ request: Api_GetOpeningTimesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getOpeningTimes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOpeningTimesInterceptors() ?? []
    )
  }

  /// Unary call to GetUpdateNote
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUpdateNote.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUpdateNote(
    _ request: Api_GetUpdateNoteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUpdateNote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUpdateNoteInterceptors() ?? []
    )
  }

  /// Unary call to GetStudyRoomList
  ///
  /// - Parameters:
  ///   - request: Request to send to GetStudyRoomList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getStudyRoomList(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getStudyRoomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyRoomListInterceptors() ?? []
    )
  }

  /// Unary call to GetEventList
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventList(
    _ request: Api_GetEventListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetEventListRequest, Api_GetEventListReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getEventList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventListInterceptors() ?? []
    )
  }

  /// Unary call to GetKino
  ///
  /// - Parameters:
  ///   - request: Request to send to GetKino.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getKino(
    _ request: Api_GetKinoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetKinoRequest, Api_GetKinoReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getKino.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKinoInterceptors() ?? []
    )
  }

  /// Unary call to SendFeedback
  ///
  /// - Parameters:
  ///   - request: Request to send to SendFeedback.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func sendFeedback(
    _ request: Api_SendFeedbackRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_SendFeedbackRequest, Api_SendFeedbackImageReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedback.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackInterceptors() ?? []
    )
  }

  /// Unary call to SendFeedbackImage
  ///
  /// - Parameters:
  ///   - request: Request to send to SendFeedbackImage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func sendFeedbackImage(
    _ request: Api_SendFeedbackImageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedbackImage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackImageInterceptors() ?? []
    )
  }

  /// Unary call to RegisterDevice
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterDevice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func registerDevice(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDeviceInterceptors() ?? []
    )
  }

  /// Unary call to VerifyKey
  ///
  /// - Parameters:
  ///   - request: Request to send to VerifyKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func verifyKey(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.verifyKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyKeyInterceptors() ?? []
    )
  }

  /// Unary call to DeviceUploadGcmToken
  ///
  /// - Parameters:
  ///   - request: Request to send to DeviceUploadGcmToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deviceUploadGcmToken(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.deviceUploadGcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceUploadGcmTokenInterceptors() ?? []
    )
  }

  /// Unary call to GetUploadStatus
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUploadStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUploadStatus(
    _ request: Api_GetUploadStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetUploadStatusRequest, Api_GetUploadStatusReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUploadStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUploadStatusInterceptors() ?? []
    )
  }

  /// Unary call to GetNotification
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNotification.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNotification(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_NotificationsRequest, Api_GetNotificationsReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationInterceptors() ?? []
    )
  }

  /// Unary call to GetNotificationConfirm
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNotificationConfirm.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNotificationConfirm(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_NotificationsRequest, Api_GetNotificationsConfirmReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotificationConfirm.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationConfirmInterceptors() ?? []
    )
  }

  /// Unary call to GetMembers
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMembers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getMembers(
    _ request: Api_GetMembersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetMembersRequest, Api_GetMembersReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMembersInterceptors() ?? []
    )
  }

  /// register your ios device for push notifications
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterIOSDevice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func registerIOSDevice(
    _ request: Api_RegisterIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterIOSDeviceInterceptors() ?? []
    )
  }

  /// remove your ios device from the db and unregister it from push notifications
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveIOSDevice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeIOSDevice(
    _ request: Api_RemoveIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.removeIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveIOSDeviceInterceptors() ?? []
    )
  }

  /// add ios device usage log to calculate notification priority
  ///
  /// - Parameters:
  ///   - request: Request to send to AddIOSDeviceUsage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addIOSDeviceUsage(
    _ request: Api_AddIOSDeviceUsageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply> {
    return self.makeUnaryCall(
      path: Api_CampusClientMetadata.Methods.addIOSDeviceUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddIOSDeviceUsageInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Api_CampusClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Api_CampusNIOClient")
public final class Api_CampusClient: Api_CampusClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Api_CampusClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Api_CampusClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the api.Campus service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_CampusClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Api_CampusNIOClient: Api_CampusClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Api_CampusClientInterceptorFactoryProtocol?

  /// Creates a client for the api.Campus service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_CampusClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Api_CampusAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Api_CampusClientInterceptorFactoryProtocol? { get }

  func makeGetTopNewsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply>

  func makeGetNewsSourcesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray>

  func makeSearchRoomsCall(
    _ request: Api_SearchRoomsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_SearchRoomsRequest, Api_SearchRoomsReply>

  func makeGetLocationsCall(
    _ request: Api_GetLocationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetLocationsRequest, Api_GetLocationsReply>

  func makeGetRoomMapsCall(
    _ request: Api_GetRoomMapsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetRoomMapsRequest, Api_GetRoomMapsReply>

  func makeGetRoomCoordinatesCall(
    _ request: Api_GetRoomCoordinatesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply>

  func makeGetRoomScheduleCall(
    _ request: Api_GetRoomScheduleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply>

  func makeGetCafeteriaRatingsCall(
    _ request: Api_CafeteriaRatingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply>

  func makeGetDishRatingsCall(
    _ request: Api_DishRatingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_DishRatingRequest, Api_DishRatingReply>

  func makeNewCafeteriaRatingCall(
    _ request: Api_NewCafeteriaRatingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeNewDishRatingCall(
    _ request: Api_NewDishRatingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetAvailableDishTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func makeGetNameTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func makeGetAvailableCafeteriaTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>

  func makeGetCafeteriasCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply>

  func makeGetDishesCall(
    _ request: Api_GetDishesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetDishesRequest, Api_GetDishesReply>

  func makeGetResponsiblePersonCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply>

  func makeGetBuilding2GpsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply>

  func makeGetAreaFacilitiesByBuildingNrCall(
    _ request: Api_GetAreaFacilitiesByBuildingNrRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply>

  func makeGetListOfToiletsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply>

  func makeGetListOfElevatorsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply>

  func makeGetMoreInformationCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply>

  func makeGetOpeningTimesCall(
    _ request: Api_GetOpeningTimesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply>

  func makeGetUpdateNoteCall(
    _ request: Api_GetUpdateNoteRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply>

  func makeGetStudyRoomListCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply>

  func makeGetEventListCall(
    _ request: Api_GetEventListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetEventListRequest, Api_GetEventListReply>

  func makeGetKinoCall(
    _ request: Api_GetKinoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetKinoRequest, Api_GetKinoReply>

  func makeSendFeedbackCall(
    _ request: Api_SendFeedbackRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_SendFeedbackRequest, Api_SendFeedbackImageReply>

  func makeSendFeedbackImageCall(
    _ request: Api_SendFeedbackImageRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply>

  func makeRegisterDeviceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func makeVerifyKeyCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func makeDeviceUploadGcmTokenCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>

  func makeGetUploadStatusCall(
    _ request: Api_GetUploadStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetUploadStatusRequest, Api_GetUploadStatusReply>

  func makeGetNotificationCall(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_NotificationsRequest, Api_GetNotificationsReply>

  func makeGetNotificationConfirmCall(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_NotificationsRequest, Api_GetNotificationsConfirmReply>

  func makeGetMembersCall(
    _ request: Api_GetMembersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetMembersRequest, Api_GetMembersReply>

  func makeRegisterIosdeviceCall(
    _ request: Api_RegisterIOSDeviceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply>

  func makeRemoveIosdeviceCall(
    _ request: Api_RemoveIOSDeviceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply>

  func makeAddIosdeviceUsageCall(
    _ request: Api_AddIOSDeviceUsageRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_CampusAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Api_CampusClientMetadata.serviceDescriptor
  }

  public var interceptors: Api_CampusClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetTopNewsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getTopNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopNewsInterceptors() ?? []
    )
  }

  public func makeGetNewsSourcesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNewsSources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsSourcesInterceptors() ?? []
    )
  }

  public func makeSearchRoomsCall(
    _ request: Api_SearchRoomsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_SearchRoomsRequest, Api_SearchRoomsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.searchRooms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchRoomsInterceptors() ?? []
    )
  }

  public func makeGetLocationsCall(
    _ request: Api_GetLocationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetLocationsRequest, Api_GetLocationsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getLocations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocationsInterceptors() ?? []
    )
  }

  public func makeGetRoomMapsCall(
    _ request: Api_GetRoomMapsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetRoomMapsRequest, Api_GetRoomMapsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomMaps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomMapsInterceptors() ?? []
    )
  }

  public func makeGetRoomCoordinatesCall(
    _ request: Api_GetRoomCoordinatesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomCoordinates.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomCoordinatesInterceptors() ?? []
    )
  }

  public func makeGetRoomScheduleCall(
    _ request: Api_GetRoomScheduleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomSchedule.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomScheduleInterceptors() ?? []
    )
  }

  public func makeGetCafeteriaRatingsCall(
    _ request: Api_CafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeteriaRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriaRatingsInterceptors() ?? []
    )
  }

  public func makeGetDishRatingsCall(
    _ request: Api_DishRatingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_DishRatingRequest, Api_DishRatingReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishRatingsInterceptors() ?? []
    )
  }

  public func makeNewCafeteriaRatingCall(
    _ request: Api_NewCafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.newCafeteriaRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewCafeteriaRatingInterceptors() ?? []
    )
  }

  public func makeNewDishRatingCall(
    _ request: Api_NewDishRatingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.newDishRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewDishRatingInterceptors() ?? []
    )
  }

  public func makeGetAvailableDishTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableDishTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableDishTagsInterceptors() ?? []
    )
  }

  public func makeGetNameTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNameTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNameTagsInterceptors() ?? []
    )
  }

  public func makeGetAvailableCafeteriaTagsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableCafeteriaTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableCafeteriaTagsInterceptors() ?? []
    )
  }

  public func makeGetCafeteriasCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeterias.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriasInterceptors() ?? []
    )
  }

  public func makeGetDishesCall(
    _ request: Api_GetDishesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetDishesRequest, Api_GetDishesReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishesInterceptors() ?? []
    )
  }

  public func makeGetResponsiblePersonCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getResponsiblePerson.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResponsiblePersonInterceptors() ?? []
    )
  }

  public func makeGetBuilding2GpsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getBuilding2Gps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBuilding2GpsInterceptors() ?? []
    )
  }

  public func makeGetAreaFacilitiesByBuildingNrCall(
    _ request: Api_GetAreaFacilitiesByBuildingNrRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAreaFacilitiesByBuildingNr.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAreaFacilitiesByBuildingNrInterceptors() ?? []
    )
  }

  public func makeGetListOfToiletsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfToilets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfToiletsInterceptors() ?? []
    )
  }

  public func makeGetListOfElevatorsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfElevators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfElevatorsInterceptors() ?? []
    )
  }

  public func makeGetMoreInformationCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMoreInformation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMoreInformationInterceptors() ?? []
    )
  }

  public func makeGetOpeningTimesCall(
    _ request: Api_GetOpeningTimesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getOpeningTimes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOpeningTimesInterceptors() ?? []
    )
  }

  public func makeGetUpdateNoteCall(
    _ request: Api_GetUpdateNoteRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUpdateNote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUpdateNoteInterceptors() ?? []
    )
  }

  public func makeGetStudyRoomListCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getStudyRoomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyRoomListInterceptors() ?? []
    )
  }

  public func makeGetEventListCall(
    _ request: Api_GetEventListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetEventListRequest, Api_GetEventListReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getEventList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventListInterceptors() ?? []
    )
  }

  public func makeGetKinoCall(
    _ request: Api_GetKinoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetKinoRequest, Api_GetKinoReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getKino.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKinoInterceptors() ?? []
    )
  }

  public func makeSendFeedbackCall(
    _ request: Api_SendFeedbackRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_SendFeedbackRequest, Api_SendFeedbackImageReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedback.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackInterceptors() ?? []
    )
  }

  public func makeSendFeedbackImageCall(
    _ request: Api_SendFeedbackImageRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedbackImage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackImageInterceptors() ?? []
    )
  }

  public func makeRegisterDeviceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDeviceInterceptors() ?? []
    )
  }

  public func makeVerifyKeyCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.verifyKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyKeyInterceptors() ?? []
    )
  }

  public func makeDeviceUploadGcmTokenCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.deviceUploadGcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceUploadGcmTokenInterceptors() ?? []
    )
  }

  public func makeGetUploadStatusCall(
    _ request: Api_GetUploadStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetUploadStatusRequest, Api_GetUploadStatusReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUploadStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUploadStatusInterceptors() ?? []
    )
  }

  public func makeGetNotificationCall(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_NotificationsRequest, Api_GetNotificationsReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationInterceptors() ?? []
    )
  }

  public func makeGetNotificationConfirmCall(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_NotificationsRequest, Api_GetNotificationsConfirmReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotificationConfirm.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationConfirmInterceptors() ?? []
    )
  }

  public func makeGetMembersCall(
    _ request: Api_GetMembersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetMembersRequest, Api_GetMembersReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMembersInterceptors() ?? []
    )
  }

  public func makeRegisterIosdeviceCall(
    _ request: Api_RegisterIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterIOSDeviceInterceptors() ?? []
    )
  }

  public func makeRemoveIosdeviceCall(
    _ request: Api_RemoveIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.removeIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveIOSDeviceInterceptors() ?? []
    )
  }

  public func makeAddIosdeviceUsageCall(
    _ request: Api_AddIOSDeviceUsageRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply> {
    return self.makeAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.addIOSDeviceUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddIOSDeviceUsageInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_CampusAsyncClientProtocol {
  public func getTopNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetTopNewsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getTopNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopNewsInterceptors() ?? []
    )
  }

  public func getNewsSources(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_NewsSourceArray {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNewsSources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsSourcesInterceptors() ?? []
    )
  }

  public func searchRooms(
    _ request: Api_SearchRoomsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_SearchRoomsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.searchRooms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchRoomsInterceptors() ?? []
    )
  }

  public func getLocations(
    _ request: Api_GetLocationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetLocationsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getLocations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocationsInterceptors() ?? []
    )
  }

  public func getRoomMaps(
    _ request: Api_GetRoomMapsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetRoomMapsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomMaps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomMapsInterceptors() ?? []
    )
  }

  public func getRoomCoordinates(
    _ request: Api_GetRoomCoordinatesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetRoomCoordinatesReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomCoordinates.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomCoordinatesInterceptors() ?? []
    )
  }

  public func getRoomSchedule(
    _ request: Api_GetRoomScheduleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetRoomScheduleReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getRoomSchedule.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoomScheduleInterceptors() ?? []
    )
  }

  public func getCafeteriaRatings(
    _ request: Api_CafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_CafeteriaRatingReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeteriaRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriaRatingsInterceptors() ?? []
    )
  }

  public func getDishRatings(
    _ request: Api_DishRatingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_DishRatingReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishRatings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishRatingsInterceptors() ?? []
    )
  }

  public func newCafeteriaRating(
    _ request: Api_NewCafeteriaRatingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.newCafeteriaRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewCafeteriaRatingInterceptors() ?? []
    )
  }

  public func newDishRating(
    _ request: Api_NewDishRatingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.newDishRating.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewDishRatingInterceptors() ?? []
    )
  }

  public func getAvailableDishTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetTagsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableDishTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableDishTagsInterceptors() ?? []
    )
  }

  public func getNameTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetTagsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNameTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNameTagsInterceptors() ?? []
    )
  }

  public func getAvailableCafeteriaTags(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetTagsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAvailableCafeteriaTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAvailableCafeteriaTagsInterceptors() ?? []
    )
  }

  public func getCafeterias(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetCafeteriaReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getCafeterias.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCafeteriasInterceptors() ?? []
    )
  }

  public func getDishes(
    _ request: Api_GetDishesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetDishesReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getDishes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDishesInterceptors() ?? []
    )
  }

  public func getResponsiblePerson(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetResponsiblePersonReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getResponsiblePerson.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResponsiblePersonInterceptors() ?? []
    )
  }

  public func getBuilding2Gps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetBuilding2GpsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getBuilding2Gps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBuilding2GpsInterceptors() ?? []
    )
  }

  public func getAreaFacilitiesByBuildingNr(
    _ request: Api_GetAreaFacilitiesByBuildingNrRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetAreaFacilitiesByBuildingNrReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getAreaFacilitiesByBuildingNr.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAreaFacilitiesByBuildingNrInterceptors() ?? []
    )
  }

  public func getListOfToilets(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetListOfToiletsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfToilets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfToiletsInterceptors() ?? []
    )
  }

  public func getListOfElevators(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetListOfElevatorsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getListOfElevators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetListOfElevatorsInterceptors() ?? []
    )
  }

  public func getMoreInformation(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetMoreInformationReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMoreInformation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMoreInformationInterceptors() ?? []
    )
  }

  public func getOpeningTimes(
    _ request: Api_GetOpeningTimesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetOpeningTimesReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getOpeningTimes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOpeningTimesInterceptors() ?? []
    )
  }

  public func getUpdateNote(
    _ request: Api_GetUpdateNoteRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetUpdateNoteReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUpdateNote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUpdateNoteInterceptors() ?? []
    )
  }

  public func getStudyRoomList(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetStudyRoomListReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getStudyRoomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyRoomListInterceptors() ?? []
    )
  }

  public func getEventList(
    _ request: Api_GetEventListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetEventListReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getEventList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventListInterceptors() ?? []
    )
  }

  public func getKino(
    _ request: Api_GetKinoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetKinoReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getKino.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKinoInterceptors() ?? []
    )
  }

  public func sendFeedback(
    _ request: Api_SendFeedbackRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_SendFeedbackImageReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedback.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackInterceptors() ?? []
    )
  }

  public func sendFeedbackImage(
    _ request: Api_SendFeedbackImageRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_SendFeedbackImageReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.sendFeedbackImage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendFeedbackImageInterceptors() ?? []
    )
  }

  public func registerDevice(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_TUMCabeStatus {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDeviceInterceptors() ?? []
    )
  }

  public func verifyKey(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_TUMCabeStatus {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.verifyKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyKeyInterceptors() ?? []
    )
  }

  public func deviceUploadGcmToken(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Api_TUMCabeStatus {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.deviceUploadGcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceUploadGcmTokenInterceptors() ?? []
    )
  }

  public func getUploadStatus(
    _ request: Api_GetUploadStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetUploadStatusReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getUploadStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUploadStatusInterceptors() ?? []
    )
  }

  public func getNotification(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetNotificationsReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationInterceptors() ?? []
    )
  }

  public func getNotificationConfirm(
    _ request: Api_NotificationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetNotificationsConfirmReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getNotificationConfirm.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNotificationConfirmInterceptors() ?? []
    )
  }

  public func getMembers(
    _ request: Api_GetMembersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetMembersReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.getMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMembersInterceptors() ?? []
    )
  }

  public func registerIOSDevice(
    _ request: Api_RegisterIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_RegisterIOSDeviceReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.registerIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterIOSDeviceInterceptors() ?? []
    )
  }

  public func removeIOSDevice(
    _ request: Api_RemoveIOSDeviceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_RemoveIOSDeviceReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.removeIOSDevice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveIOSDeviceInterceptors() ?? []
    )
  }

  public func addIOSDeviceUsage(
    _ request: Api_AddIOSDeviceUsageRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_AddIOSDeviceUsageReply {
    return try await self.performAsyncUnaryCall(
      path: Api_CampusClientMetadata.Methods.addIOSDeviceUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddIOSDeviceUsageInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Api_CampusAsyncClient: Api_CampusAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Api_CampusClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_CampusClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

public protocol Api_CampusClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'getTopNews'.
  func makeGetTopNewsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply>]

  /// - Returns: Interceptors to use when invoking 'getNewsSources'.
  func makeGetNewsSourcesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray>]

  /// - Returns: Interceptors to use when invoking 'searchRooms'.
  func makeSearchRoomsInterceptors() -> [ClientInterceptor<Api_SearchRoomsRequest, Api_SearchRoomsReply>]

  /// - Returns: Interceptors to use when invoking 'getLocations'.
  func makeGetLocationsInterceptors() -> [ClientInterceptor<Api_GetLocationsRequest, Api_GetLocationsReply>]

  /// - Returns: Interceptors to use when invoking 'getRoomMaps'.
  func makeGetRoomMapsInterceptors() -> [ClientInterceptor<Api_GetRoomMapsRequest, Api_GetRoomMapsReply>]

  /// - Returns: Interceptors to use when invoking 'getRoomCoordinates'.
  func makeGetRoomCoordinatesInterceptors() -> [ClientInterceptor<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply>]

  /// - Returns: Interceptors to use when invoking 'getRoomSchedule'.
  func makeGetRoomScheduleInterceptors() -> [ClientInterceptor<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply>]

  /// - Returns: Interceptors to use when invoking 'getCafeteriaRatings'.
  func makeGetCafeteriaRatingsInterceptors() -> [ClientInterceptor<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply>]

  /// - Returns: Interceptors to use when invoking 'getDishRatings'.
  func makeGetDishRatingsInterceptors() -> [ClientInterceptor<Api_DishRatingRequest, Api_DishRatingReply>]

  /// - Returns: Interceptors to use when invoking 'newCafeteriaRating'.
  func makeNewCafeteriaRatingInterceptors() -> [ClientInterceptor<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'newDishRating'.
  func makeNewDishRatingInterceptors() -> [ClientInterceptor<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getAvailableDishTags'.
  func makeGetAvailableDishTagsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when invoking 'getNameTags'.
  func makeGetNameTagsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when invoking 'getAvailableCafeteriaTags'.
  func makeGetAvailableCafeteriaTagsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when invoking 'getCafeterias'.
  func makeGetCafeteriasInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply>]

  /// - Returns: Interceptors to use when invoking 'getDishes'.
  func makeGetDishesInterceptors() -> [ClientInterceptor<Api_GetDishesRequest, Api_GetDishesReply>]

  /// - Returns: Interceptors to use when invoking 'getResponsiblePerson'.
  func makeGetResponsiblePersonInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply>]

  /// - Returns: Interceptors to use when invoking 'getBuilding2Gps'.
  func makeGetBuilding2GpsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply>]

  /// - Returns: Interceptors to use when invoking 'getAreaFacilitiesByBuildingNr'.
  func makeGetAreaFacilitiesByBuildingNrInterceptors() -> [ClientInterceptor<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply>]

  /// - Returns: Interceptors to use when invoking 'getListOfToilets'.
  func makeGetListOfToiletsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply>]

  /// - Returns: Interceptors to use when invoking 'getListOfElevators'.
  func makeGetListOfElevatorsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply>]

  /// - Returns: Interceptors to use when invoking 'getMoreInformation'.
  func makeGetMoreInformationInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply>]

  /// - Returns: Interceptors to use when invoking 'getOpeningTimes'.
  func makeGetOpeningTimesInterceptors() -> [ClientInterceptor<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply>]

  /// - Returns: Interceptors to use when invoking 'getUpdateNote'.
  func makeGetUpdateNoteInterceptors() -> [ClientInterceptor<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply>]

  /// - Returns: Interceptors to use when invoking 'getStudyRoomList'.
  func makeGetStudyRoomListInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply>]

  /// - Returns: Interceptors to use when invoking 'getEventList'.
  func makeGetEventListInterceptors() -> [ClientInterceptor<Api_GetEventListRequest, Api_GetEventListReply>]

  /// - Returns: Interceptors to use when invoking 'getKino'.
  func makeGetKinoInterceptors() -> [ClientInterceptor<Api_GetKinoRequest, Api_GetKinoReply>]

  /// - Returns: Interceptors to use when invoking 'sendFeedback'.
  func makeSendFeedbackInterceptors() -> [ClientInterceptor<Api_SendFeedbackRequest, Api_SendFeedbackImageReply>]

  /// - Returns: Interceptors to use when invoking 'sendFeedbackImage'.
  func makeSendFeedbackImageInterceptors() -> [ClientInterceptor<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply>]

  /// - Returns: Interceptors to use when invoking 'registerDevice'.
  func makeRegisterDeviceInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when invoking 'verifyKey'.
  func makeVerifyKeyInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when invoking 'deviceUploadGcmToken'.
  func makeDeviceUploadGcmTokenInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when invoking 'getUploadStatus'.
  func makeGetUploadStatusInterceptors() -> [ClientInterceptor<Api_GetUploadStatusRequest, Api_GetUploadStatusReply>]

  /// - Returns: Interceptors to use when invoking 'getNotification'.
  func makeGetNotificationInterceptors() -> [ClientInterceptor<Api_NotificationsRequest, Api_GetNotificationsReply>]

  /// - Returns: Interceptors to use when invoking 'getNotificationConfirm'.
  func makeGetNotificationConfirmInterceptors() -> [ClientInterceptor<Api_NotificationsRequest, Api_GetNotificationsConfirmReply>]

  /// - Returns: Interceptors to use when invoking 'getMembers'.
  func makeGetMembersInterceptors() -> [ClientInterceptor<Api_GetMembersRequest, Api_GetMembersReply>]

  /// - Returns: Interceptors to use when invoking 'registerIOSDevice'.
  func makeRegisterIOSDeviceInterceptors() -> [ClientInterceptor<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply>]

  /// - Returns: Interceptors to use when invoking 'removeIOSDevice'.
  func makeRemoveIOSDeviceInterceptors() -> [ClientInterceptor<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply>]

  /// - Returns: Interceptors to use when invoking 'addIOSDeviceUsage'.
  func makeAddIOSDeviceUsageInterceptors() -> [ClientInterceptor<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply>]
}

public enum Api_CampusClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Campus",
    fullName: "api.Campus",
    methods: [
      Api_CampusClientMetadata.Methods.getTopNews,
      Api_CampusClientMetadata.Methods.getNewsSources,
      Api_CampusClientMetadata.Methods.searchRooms,
      Api_CampusClientMetadata.Methods.getLocations,
      Api_CampusClientMetadata.Methods.getRoomMaps,
      Api_CampusClientMetadata.Methods.getRoomCoordinates,
      Api_CampusClientMetadata.Methods.getRoomSchedule,
      Api_CampusClientMetadata.Methods.getCafeteriaRatings,
      Api_CampusClientMetadata.Methods.getDishRatings,
      Api_CampusClientMetadata.Methods.newCafeteriaRating,
      Api_CampusClientMetadata.Methods.newDishRating,
      Api_CampusClientMetadata.Methods.getAvailableDishTags,
      Api_CampusClientMetadata.Methods.getNameTags,
      Api_CampusClientMetadata.Methods.getAvailableCafeteriaTags,
      Api_CampusClientMetadata.Methods.getCafeterias,
      Api_CampusClientMetadata.Methods.getDishes,
      Api_CampusClientMetadata.Methods.getResponsiblePerson,
      Api_CampusClientMetadata.Methods.getBuilding2Gps,
      Api_CampusClientMetadata.Methods.getAreaFacilitiesByBuildingNr,
      Api_CampusClientMetadata.Methods.getListOfToilets,
      Api_CampusClientMetadata.Methods.getListOfElevators,
      Api_CampusClientMetadata.Methods.getMoreInformation,
      Api_CampusClientMetadata.Methods.getOpeningTimes,
      Api_CampusClientMetadata.Methods.getUpdateNote,
      Api_CampusClientMetadata.Methods.getStudyRoomList,
      Api_CampusClientMetadata.Methods.getEventList,
      Api_CampusClientMetadata.Methods.getKino,
      Api_CampusClientMetadata.Methods.sendFeedback,
      Api_CampusClientMetadata.Methods.sendFeedbackImage,
      Api_CampusClientMetadata.Methods.registerDevice,
      Api_CampusClientMetadata.Methods.verifyKey,
      Api_CampusClientMetadata.Methods.deviceUploadGcmToken,
      Api_CampusClientMetadata.Methods.getUploadStatus,
      Api_CampusClientMetadata.Methods.getNotification,
      Api_CampusClientMetadata.Methods.getNotificationConfirm,
      Api_CampusClientMetadata.Methods.getMembers,
      Api_CampusClientMetadata.Methods.registerIOSDevice,
      Api_CampusClientMetadata.Methods.removeIOSDevice,
      Api_CampusClientMetadata.Methods.addIOSDeviceUsage,
    ]
  )

  public enum Methods {
    public static let getTopNews = GRPCMethodDescriptor(
      name: "GetTopNews",
      path: "/api.Campus/GetTopNews",
      type: GRPCCallType.unary
    )

    public static let getNewsSources = GRPCMethodDescriptor(
      name: "GetNewsSources",
      path: "/api.Campus/GetNewsSources",
      type: GRPCCallType.unary
    )

    public static let searchRooms = GRPCMethodDescriptor(
      name: "SearchRooms",
      path: "/api.Campus/SearchRooms",
      type: GRPCCallType.unary
    )

    public static let getLocations = GRPCMethodDescriptor(
      name: "GetLocations",
      path: "/api.Campus/GetLocations",
      type: GRPCCallType.unary
    )

    public static let getRoomMaps = GRPCMethodDescriptor(
      name: "GetRoomMaps",
      path: "/api.Campus/GetRoomMaps",
      type: GRPCCallType.unary
    )

    public static let getRoomCoordinates = GRPCMethodDescriptor(
      name: "GetRoomCoordinates",
      path: "/api.Campus/GetRoomCoordinates",
      type: GRPCCallType.unary
    )

    public static let getRoomSchedule = GRPCMethodDescriptor(
      name: "GetRoomSchedule",
      path: "/api.Campus/GetRoomSchedule",
      type: GRPCCallType.unary
    )

    public static let getCafeteriaRatings = GRPCMethodDescriptor(
      name: "GetCafeteriaRatings",
      path: "/api.Campus/GetCafeteriaRatings",
      type: GRPCCallType.unary
    )

    public static let getDishRatings = GRPCMethodDescriptor(
      name: "GetDishRatings",
      path: "/api.Campus/GetDishRatings",
      type: GRPCCallType.unary
    )

    public static let newCafeteriaRating = GRPCMethodDescriptor(
      name: "NewCafeteriaRating",
      path: "/api.Campus/NewCafeteriaRating",
      type: GRPCCallType.unary
    )

    public static let newDishRating = GRPCMethodDescriptor(
      name: "NewDishRating",
      path: "/api.Campus/NewDishRating",
      type: GRPCCallType.unary
    )

    public static let getAvailableDishTags = GRPCMethodDescriptor(
      name: "GetAvailableDishTags",
      path: "/api.Campus/GetAvailableDishTags",
      type: GRPCCallType.unary
    )

    public static let getNameTags = GRPCMethodDescriptor(
      name: "GetNameTags",
      path: "/api.Campus/GetNameTags",
      type: GRPCCallType.unary
    )

    public static let getAvailableCafeteriaTags = GRPCMethodDescriptor(
      name: "GetAvailableCafeteriaTags",
      path: "/api.Campus/GetAvailableCafeteriaTags",
      type: GRPCCallType.unary
    )

    public static let getCafeterias = GRPCMethodDescriptor(
      name: "GetCafeterias",
      path: "/api.Campus/GetCafeterias",
      type: GRPCCallType.unary
    )

    public static let getDishes = GRPCMethodDescriptor(
      name: "GetDishes",
      path: "/api.Campus/GetDishes",
      type: GRPCCallType.unary
    )

    public static let getResponsiblePerson = GRPCMethodDescriptor(
      name: "GetResponsiblePerson",
      path: "/api.Campus/GetResponsiblePerson",
      type: GRPCCallType.unary
    )

    public static let getBuilding2Gps = GRPCMethodDescriptor(
      name: "GetBuilding2Gps",
      path: "/api.Campus/GetBuilding2Gps",
      type: GRPCCallType.unary
    )

    public static let getAreaFacilitiesByBuildingNr = GRPCMethodDescriptor(
      name: "GetAreaFacilitiesByBuildingNr",
      path: "/api.Campus/GetAreaFacilitiesByBuildingNr",
      type: GRPCCallType.unary
    )

    public static let getListOfToilets = GRPCMethodDescriptor(
      name: "GetListOfToilets",
      path: "/api.Campus/GetListOfToilets",
      type: GRPCCallType.unary
    )

    public static let getListOfElevators = GRPCMethodDescriptor(
      name: "GetListOfElevators",
      path: "/api.Campus/GetListOfElevators",
      type: GRPCCallType.unary
    )

    public static let getMoreInformation = GRPCMethodDescriptor(
      name: "GetMoreInformation",
      path: "/api.Campus/GetMoreInformation",
      type: GRPCCallType.unary
    )

    public static let getOpeningTimes = GRPCMethodDescriptor(
      name: "GetOpeningTimes",
      path: "/api.Campus/GetOpeningTimes",
      type: GRPCCallType.unary
    )

    public static let getUpdateNote = GRPCMethodDescriptor(
      name: "GetUpdateNote",
      path: "/api.Campus/GetUpdateNote",
      type: GRPCCallType.unary
    )

    public static let getStudyRoomList = GRPCMethodDescriptor(
      name: "GetStudyRoomList",
      path: "/api.Campus/GetStudyRoomList",
      type: GRPCCallType.unary
    )

    public static let getEventList = GRPCMethodDescriptor(
      name: "GetEventList",
      path: "/api.Campus/GetEventList",
      type: GRPCCallType.unary
    )

    public static let getKino = GRPCMethodDescriptor(
      name: "GetKino",
      path: "/api.Campus/GetKino",
      type: GRPCCallType.unary
    )

    public static let sendFeedback = GRPCMethodDescriptor(
      name: "SendFeedback",
      path: "/api.Campus/SendFeedback",
      type: GRPCCallType.unary
    )

    public static let sendFeedbackImage = GRPCMethodDescriptor(
      name: "SendFeedbackImage",
      path: "/api.Campus/SendFeedbackImage",
      type: GRPCCallType.unary
    )

    public static let registerDevice = GRPCMethodDescriptor(
      name: "RegisterDevice",
      path: "/api.Campus/RegisterDevice",
      type: GRPCCallType.unary
    )

    public static let verifyKey = GRPCMethodDescriptor(
      name: "VerifyKey",
      path: "/api.Campus/VerifyKey",
      type: GRPCCallType.unary
    )

    public static let deviceUploadGcmToken = GRPCMethodDescriptor(
      name: "DeviceUploadGcmToken",
      path: "/api.Campus/DeviceUploadGcmToken",
      type: GRPCCallType.unary
    )

    public static let getUploadStatus = GRPCMethodDescriptor(
      name: "GetUploadStatus",
      path: "/api.Campus/GetUploadStatus",
      type: GRPCCallType.unary
    )

    public static let getNotification = GRPCMethodDescriptor(
      name: "GetNotification",
      path: "/api.Campus/GetNotification",
      type: GRPCCallType.unary
    )

    public static let getNotificationConfirm = GRPCMethodDescriptor(
      name: "GetNotificationConfirm",
      path: "/api.Campus/GetNotificationConfirm",
      type: GRPCCallType.unary
    )

    public static let getMembers = GRPCMethodDescriptor(
      name: "GetMembers",
      path: "/api.Campus/GetMembers",
      type: GRPCCallType.unary
    )

    public static let registerIOSDevice = GRPCMethodDescriptor(
      name: "RegisterIOSDevice",
      path: "/api.Campus/RegisterIOSDevice",
      type: GRPCCallType.unary
    )

    public static let removeIOSDevice = GRPCMethodDescriptor(
      name: "RemoveIOSDevice",
      path: "/api.Campus/RemoveIOSDevice",
      type: GRPCCallType.unary
    )

    public static let addIOSDeviceUsage = GRPCMethodDescriptor(
      name: "AddIOSDeviceUsage",
      path: "/api.Campus/AddIOSDeviceUsage",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Api_CampusProvider: CallHandlerProvider {
  var interceptors: Api_CampusServerInterceptorFactoryProtocol? { get }

  func getTopNews(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetTopNewsReply>

  func getNewsSources(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_NewsSourceArray>

  func searchRooms(request: Api_SearchRoomsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_SearchRoomsReply>

  /// a location is a campus location/building, e.g. "Garching Forschungszentrum"
  func getLocations(request: Api_GetLocationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetLocationsReply>

  func getRoomMaps(request: Api_GetRoomMapsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetRoomMapsReply>

  func getRoomCoordinates(request: Api_GetRoomCoordinatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetRoomCoordinatesReply>

  func getRoomSchedule(request: Api_GetRoomScheduleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetRoomScheduleReply>

  /// This endpoint retrieves Cafeteria Ratings from the Backend.
  func getCafeteriaRatings(request: Api_CafeteriaRatingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_CafeteriaRatingReply>

  func getDishRatings(request: Api_DishRatingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_DishRatingReply>

  func newCafeteriaRating(request: Api_NewCafeteriaRatingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  func newDishRating(request: Api_NewDishRatingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  func getAvailableDishTags(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetTagsReply>

  func getNameTags(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetTagsReply>

  func getAvailableCafeteriaTags(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetTagsReply>

  func getCafeterias(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetCafeteriaReply>

  func getDishes(request: Api_GetDishesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetDishesReply>

  func getResponsiblePerson(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetResponsiblePersonReply>

  func getBuilding2Gps(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetBuilding2GpsReply>

  func getAreaFacilitiesByBuildingNr(request: Api_GetAreaFacilitiesByBuildingNrRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetAreaFacilitiesByBuildingNrReply>

  func getListOfToilets(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetListOfToiletsReply>

  func getListOfElevators(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetListOfElevatorsReply>

  func getMoreInformation(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetMoreInformationReply>

  func getOpeningTimes(request: Api_GetOpeningTimesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetOpeningTimesReply>

  func getUpdateNote(request: Api_GetUpdateNoteRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetUpdateNoteReply>

  func getStudyRoomList(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetStudyRoomListReply>

  func getEventList(request: Api_GetEventListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetEventListReply>

  func getKino(request: Api_GetKinoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetKinoReply>

  func sendFeedback(request: Api_SendFeedbackRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_SendFeedbackImageReply>

  func sendFeedbackImage(request: Api_SendFeedbackImageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_SendFeedbackImageReply>

  func registerDevice(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_TUMCabeStatus>

  func verifyKey(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_TUMCabeStatus>

  func deviceUploadGcmToken(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Api_TUMCabeStatus>

  func getUploadStatus(request: Api_GetUploadStatusRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetUploadStatusReply>

  func getNotification(request: Api_NotificationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetNotificationsReply>

  func getNotificationConfirm(request: Api_NotificationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetNotificationsConfirmReply>

  func getMembers(request: Api_GetMembersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetMembersReply>

  /// register your ios device for push notifications
  func registerIOSDevice(request: Api_RegisterIOSDeviceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_RegisterIOSDeviceReply>

  /// remove your ios device from the db and unregister it from push notifications
  func removeIOSDevice(request: Api_RemoveIOSDeviceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_RemoveIOSDeviceReply>

  /// add ios device usage log to calculate notification priority
  func addIOSDeviceUsage(request: Api_AddIOSDeviceUsageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_AddIOSDeviceUsageReply>
}

extension Api_CampusProvider {
  public var serviceName: Substring {
    return Api_CampusServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetTopNews":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTopNewsReply>(),
        interceptors: self.interceptors?.makeGetTopNewsInterceptors() ?? [],
        userFunction: self.getTopNews(request:context:)
      )

    case "GetNewsSources":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_NewsSourceArray>(),
        interceptors: self.interceptors?.makeGetNewsSourcesInterceptors() ?? [],
        userFunction: self.getNewsSources(request:context:)
      )

    case "SearchRooms":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SearchRoomsRequest>(),
        responseSerializer: ProtobufSerializer<Api_SearchRoomsReply>(),
        interceptors: self.interceptors?.makeSearchRoomsInterceptors() ?? [],
        userFunction: self.searchRooms(request:context:)
      )

    case "GetLocations":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetLocationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetLocationsReply>(),
        interceptors: self.interceptors?.makeGetLocationsInterceptors() ?? [],
        userFunction: self.getLocations(request:context:)
      )

    case "GetRoomMaps":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomMapsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomMapsReply>(),
        interceptors: self.interceptors?.makeGetRoomMapsInterceptors() ?? [],
        userFunction: self.getRoomMaps(request:context:)
      )

    case "GetRoomCoordinates":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomCoordinatesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomCoordinatesReply>(),
        interceptors: self.interceptors?.makeGetRoomCoordinatesInterceptors() ?? [],
        userFunction: self.getRoomCoordinates(request:context:)
      )

    case "GetRoomSchedule":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomScheduleRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomScheduleReply>(),
        interceptors: self.interceptors?.makeGetRoomScheduleInterceptors() ?? [],
        userFunction: self.getRoomSchedule(request:context:)
      )

    case "GetCafeteriaRatings":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_CafeteriaRatingRequest>(),
        responseSerializer: ProtobufSerializer<Api_CafeteriaRatingReply>(),
        interceptors: self.interceptors?.makeGetCafeteriaRatingsInterceptors() ?? [],
        userFunction: self.getCafeteriaRatings(request:context:)
      )

    case "GetDishRatings":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_DishRatingRequest>(),
        responseSerializer: ProtobufSerializer<Api_DishRatingReply>(),
        interceptors: self.interceptors?.makeGetDishRatingsInterceptors() ?? [],
        userFunction: self.getDishRatings(request:context:)
      )

    case "NewCafeteriaRating":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NewCafeteriaRatingRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeNewCafeteriaRatingInterceptors() ?? [],
        userFunction: self.newCafeteriaRating(request:context:)
      )

    case "NewDishRating":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NewDishRatingRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeNewDishRatingInterceptors() ?? [],
        userFunction: self.newDishRating(request:context:)
      )

    case "GetAvailableDishTags":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetAvailableDishTagsInterceptors() ?? [],
        userFunction: self.getAvailableDishTags(request:context:)
      )

    case "GetNameTags":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetNameTagsInterceptors() ?? [],
        userFunction: self.getNameTags(request:context:)
      )

    case "GetAvailableCafeteriaTags":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetAvailableCafeteriaTagsInterceptors() ?? [],
        userFunction: self.getAvailableCafeteriaTags(request:context:)
      )

    case "GetCafeterias":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetCafeteriaReply>(),
        interceptors: self.interceptors?.makeGetCafeteriasInterceptors() ?? [],
        userFunction: self.getCafeterias(request:context:)
      )

    case "GetDishes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetDishesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetDishesReply>(),
        interceptors: self.interceptors?.makeGetDishesInterceptors() ?? [],
        userFunction: self.getDishes(request:context:)
      )

    case "GetResponsiblePerson":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetResponsiblePersonReply>(),
        interceptors: self.interceptors?.makeGetResponsiblePersonInterceptors() ?? [],
        userFunction: self.getResponsiblePerson(request:context:)
      )

    case "GetBuilding2Gps":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetBuilding2GpsReply>(),
        interceptors: self.interceptors?.makeGetBuilding2GpsInterceptors() ?? [],
        userFunction: self.getBuilding2Gps(request:context:)
      )

    case "GetAreaFacilitiesByBuildingNr":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetAreaFacilitiesByBuildingNrRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetAreaFacilitiesByBuildingNrReply>(),
        interceptors: self.interceptors?.makeGetAreaFacilitiesByBuildingNrInterceptors() ?? [],
        userFunction: self.getAreaFacilitiesByBuildingNr(request:context:)
      )

    case "GetListOfToilets":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetListOfToiletsReply>(),
        interceptors: self.interceptors?.makeGetListOfToiletsInterceptors() ?? [],
        userFunction: self.getListOfToilets(request:context:)
      )

    case "GetListOfElevators":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetListOfElevatorsReply>(),
        interceptors: self.interceptors?.makeGetListOfElevatorsInterceptors() ?? [],
        userFunction: self.getListOfElevators(request:context:)
      )

    case "GetMoreInformation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetMoreInformationReply>(),
        interceptors: self.interceptors?.makeGetMoreInformationInterceptors() ?? [],
        userFunction: self.getMoreInformation(request:context:)
      )

    case "GetOpeningTimes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetOpeningTimesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetOpeningTimesReply>(),
        interceptors: self.interceptors?.makeGetOpeningTimesInterceptors() ?? [],
        userFunction: self.getOpeningTimes(request:context:)
      )

    case "GetUpdateNote":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetUpdateNoteRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetUpdateNoteReply>(),
        interceptors: self.interceptors?.makeGetUpdateNoteInterceptors() ?? [],
        userFunction: self.getUpdateNote(request:context:)
      )

    case "GetStudyRoomList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetStudyRoomListReply>(),
        interceptors: self.interceptors?.makeGetStudyRoomListInterceptors() ?? [],
        userFunction: self.getStudyRoomList(request:context:)
      )

    case "GetEventList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetEventListRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetEventListReply>(),
        interceptors: self.interceptors?.makeGetEventListInterceptors() ?? [],
        userFunction: self.getEventList(request:context:)
      )

    case "GetKino":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetKinoRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetKinoReply>(),
        interceptors: self.interceptors?.makeGetKinoInterceptors() ?? [],
        userFunction: self.getKino(request:context:)
      )

    case "SendFeedback":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SendFeedbackRequest>(),
        responseSerializer: ProtobufSerializer<Api_SendFeedbackImageReply>(),
        interceptors: self.interceptors?.makeSendFeedbackInterceptors() ?? [],
        userFunction: self.sendFeedback(request:context:)
      )

    case "SendFeedbackImage":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SendFeedbackImageRequest>(),
        responseSerializer: ProtobufSerializer<Api_SendFeedbackImageReply>(),
        interceptors: self.interceptors?.makeSendFeedbackImageInterceptors() ?? [],
        userFunction: self.sendFeedbackImage(request:context:)
      )

    case "RegisterDevice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeRegisterDeviceInterceptors() ?? [],
        userFunction: self.registerDevice(request:context:)
      )

    case "VerifyKey":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeVerifyKeyInterceptors() ?? [],
        userFunction: self.verifyKey(request:context:)
      )

    case "DeviceUploadGcmToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeDeviceUploadGcmTokenInterceptors() ?? [],
        userFunction: self.deviceUploadGcmToken(request:context:)
      )

    case "GetUploadStatus":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetUploadStatusRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetUploadStatusReply>(),
        interceptors: self.interceptors?.makeGetUploadStatusInterceptors() ?? [],
        userFunction: self.getUploadStatus(request:context:)
      )

    case "GetNotification":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NotificationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetNotificationsReply>(),
        interceptors: self.interceptors?.makeGetNotificationInterceptors() ?? [],
        userFunction: self.getNotification(request:context:)
      )

    case "GetNotificationConfirm":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NotificationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetNotificationsConfirmReply>(),
        interceptors: self.interceptors?.makeGetNotificationConfirmInterceptors() ?? [],
        userFunction: self.getNotificationConfirm(request:context:)
      )

    case "GetMembers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetMembersRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetMembersReply>(),
        interceptors: self.interceptors?.makeGetMembersInterceptors() ?? [],
        userFunction: self.getMembers(request:context:)
      )

    case "RegisterIOSDevice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_RegisterIOSDeviceRequest>(),
        responseSerializer: ProtobufSerializer<Api_RegisterIOSDeviceReply>(),
        interceptors: self.interceptors?.makeRegisterIOSDeviceInterceptors() ?? [],
        userFunction: self.registerIOSDevice(request:context:)
      )

    case "RemoveIOSDevice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_RemoveIOSDeviceRequest>(),
        responseSerializer: ProtobufSerializer<Api_RemoveIOSDeviceReply>(),
        interceptors: self.interceptors?.makeRemoveIOSDeviceInterceptors() ?? [],
        userFunction: self.removeIOSDevice(request:context:)
      )

    case "AddIOSDeviceUsage":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_AddIOSDeviceUsageRequest>(),
        responseSerializer: ProtobufSerializer<Api_AddIOSDeviceUsageReply>(),
        interceptors: self.interceptors?.makeAddIOSDeviceUsageInterceptors() ?? [],
        userFunction: self.addIOSDeviceUsage(request:context:)
      )

    default:
      return nil
    }
  }
}

#if compiler(>=5.6)

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Api_CampusAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Api_CampusServerInterceptorFactoryProtocol? { get }

  @Sendable func getTopNews(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetTopNewsReply

  @Sendable func getNewsSources(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_NewsSourceArray

  @Sendable func searchRooms(
    request: Api_SearchRoomsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_SearchRoomsReply

  /// a location is a campus location/building, e.g. "Garching Forschungszentrum"
  @Sendable func getLocations(
    request: Api_GetLocationsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetLocationsReply

  @Sendable func getRoomMaps(
    request: Api_GetRoomMapsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetRoomMapsReply

  @Sendable func getRoomCoordinates(
    request: Api_GetRoomCoordinatesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetRoomCoordinatesReply

  @Sendable func getRoomSchedule(
    request: Api_GetRoomScheduleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetRoomScheduleReply

  /// This endpoint retrieves Cafeteria Ratings from the Backend.
  @Sendable func getCafeteriaRatings(
    request: Api_CafeteriaRatingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_CafeteriaRatingReply

  @Sendable func getDishRatings(
    request: Api_DishRatingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_DishRatingReply

  @Sendable func newCafeteriaRating(
    request: Api_NewCafeteriaRatingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  @Sendable func newDishRating(
    request: Api_NewDishRatingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  @Sendable func getAvailableDishTags(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetTagsReply

  @Sendable func getNameTags(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetTagsReply

  @Sendable func getAvailableCafeteriaTags(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetTagsReply

  @Sendable func getCafeterias(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetCafeteriaReply

  @Sendable func getDishes(
    request: Api_GetDishesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetDishesReply

  @Sendable func getResponsiblePerson(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetResponsiblePersonReply

  @Sendable func getBuilding2Gps(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetBuilding2GpsReply

  @Sendable func getAreaFacilitiesByBuildingNr(
    request: Api_GetAreaFacilitiesByBuildingNrRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetAreaFacilitiesByBuildingNrReply

  @Sendable func getListOfToilets(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetListOfToiletsReply

  @Sendable func getListOfElevators(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetListOfElevatorsReply

  @Sendable func getMoreInformation(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetMoreInformationReply

  @Sendable func getOpeningTimes(
    request: Api_GetOpeningTimesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetOpeningTimesReply

  @Sendable func getUpdateNote(
    request: Api_GetUpdateNoteRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetUpdateNoteReply

  @Sendable func getStudyRoomList(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetStudyRoomListReply

  @Sendable func getEventList(
    request: Api_GetEventListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetEventListReply

  @Sendable func getKino(
    request: Api_GetKinoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetKinoReply

  @Sendable func sendFeedback(
    request: Api_SendFeedbackRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_SendFeedbackImageReply

  @Sendable func sendFeedbackImage(
    request: Api_SendFeedbackImageRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_SendFeedbackImageReply

  @Sendable func registerDevice(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_TUMCabeStatus

  @Sendable func verifyKey(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_TUMCabeStatus

  @Sendable func deviceUploadGcmToken(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_TUMCabeStatus

  @Sendable func getUploadStatus(
    request: Api_GetUploadStatusRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetUploadStatusReply

  @Sendable func getNotification(
    request: Api_NotificationsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetNotificationsReply

  @Sendable func getNotificationConfirm(
    request: Api_NotificationsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetNotificationsConfirmReply

  @Sendable func getMembers(
    request: Api_GetMembersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetMembersReply

  /// register your ios device for push notifications
  @Sendable func registerIOSDevice(
    request: Api_RegisterIOSDeviceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_RegisterIOSDeviceReply

  /// remove your ios device from the db and unregister it from push notifications
  @Sendable func removeIOSDevice(
    request: Api_RemoveIOSDeviceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_RemoveIOSDeviceReply

  /// add ios device usage log to calculate notification priority
  @Sendable func addIOSDeviceUsage(
    request: Api_AddIOSDeviceUsageRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_AddIOSDeviceUsageReply
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_CampusAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Api_CampusServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Api_CampusServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Api_CampusServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetTopNews":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTopNewsReply>(),
        interceptors: self.interceptors?.makeGetTopNewsInterceptors() ?? [],
        wrapping: self.getTopNews(request:context:)
      )

    case "GetNewsSources":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_NewsSourceArray>(),
        interceptors: self.interceptors?.makeGetNewsSourcesInterceptors() ?? [],
        wrapping: self.getNewsSources(request:context:)
      )

    case "SearchRooms":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SearchRoomsRequest>(),
        responseSerializer: ProtobufSerializer<Api_SearchRoomsReply>(),
        interceptors: self.interceptors?.makeSearchRoomsInterceptors() ?? [],
        wrapping: self.searchRooms(request:context:)
      )

    case "GetLocations":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetLocationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetLocationsReply>(),
        interceptors: self.interceptors?.makeGetLocationsInterceptors() ?? [],
        wrapping: self.getLocations(request:context:)
      )

    case "GetRoomMaps":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomMapsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomMapsReply>(),
        interceptors: self.interceptors?.makeGetRoomMapsInterceptors() ?? [],
        wrapping: self.getRoomMaps(request:context:)
      )

    case "GetRoomCoordinates":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomCoordinatesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomCoordinatesReply>(),
        interceptors: self.interceptors?.makeGetRoomCoordinatesInterceptors() ?? [],
        wrapping: self.getRoomCoordinates(request:context:)
      )

    case "GetRoomSchedule":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetRoomScheduleRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetRoomScheduleReply>(),
        interceptors: self.interceptors?.makeGetRoomScheduleInterceptors() ?? [],
        wrapping: self.getRoomSchedule(request:context:)
      )

    case "GetCafeteriaRatings":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_CafeteriaRatingRequest>(),
        responseSerializer: ProtobufSerializer<Api_CafeteriaRatingReply>(),
        interceptors: self.interceptors?.makeGetCafeteriaRatingsInterceptors() ?? [],
        wrapping: self.getCafeteriaRatings(request:context:)
      )

    case "GetDishRatings":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_DishRatingRequest>(),
        responseSerializer: ProtobufSerializer<Api_DishRatingReply>(),
        interceptors: self.interceptors?.makeGetDishRatingsInterceptors() ?? [],
        wrapping: self.getDishRatings(request:context:)
      )

    case "NewCafeteriaRating":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NewCafeteriaRatingRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeNewCafeteriaRatingInterceptors() ?? [],
        wrapping: self.newCafeteriaRating(request:context:)
      )

    case "NewDishRating":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NewDishRatingRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeNewDishRatingInterceptors() ?? [],
        wrapping: self.newDishRating(request:context:)
      )

    case "GetAvailableDishTags":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetAvailableDishTagsInterceptors() ?? [],
        wrapping: self.getAvailableDishTags(request:context:)
      )

    case "GetNameTags":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetNameTagsInterceptors() ?? [],
        wrapping: self.getNameTags(request:context:)
      )

    case "GetAvailableCafeteriaTags":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetTagsReply>(),
        interceptors: self.interceptors?.makeGetAvailableCafeteriaTagsInterceptors() ?? [],
        wrapping: self.getAvailableCafeteriaTags(request:context:)
      )

    case "GetCafeterias":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetCafeteriaReply>(),
        interceptors: self.interceptors?.makeGetCafeteriasInterceptors() ?? [],
        wrapping: self.getCafeterias(request:context:)
      )

    case "GetDishes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetDishesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetDishesReply>(),
        interceptors: self.interceptors?.makeGetDishesInterceptors() ?? [],
        wrapping: self.getDishes(request:context:)
      )

    case "GetResponsiblePerson":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetResponsiblePersonReply>(),
        interceptors: self.interceptors?.makeGetResponsiblePersonInterceptors() ?? [],
        wrapping: self.getResponsiblePerson(request:context:)
      )

    case "GetBuilding2Gps":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetBuilding2GpsReply>(),
        interceptors: self.interceptors?.makeGetBuilding2GpsInterceptors() ?? [],
        wrapping: self.getBuilding2Gps(request:context:)
      )

    case "GetAreaFacilitiesByBuildingNr":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetAreaFacilitiesByBuildingNrRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetAreaFacilitiesByBuildingNrReply>(),
        interceptors: self.interceptors?.makeGetAreaFacilitiesByBuildingNrInterceptors() ?? [],
        wrapping: self.getAreaFacilitiesByBuildingNr(request:context:)
      )

    case "GetListOfToilets":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetListOfToiletsReply>(),
        interceptors: self.interceptors?.makeGetListOfToiletsInterceptors() ?? [],
        wrapping: self.getListOfToilets(request:context:)
      )

    case "GetListOfElevators":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetListOfElevatorsReply>(),
        interceptors: self.interceptors?.makeGetListOfElevatorsInterceptors() ?? [],
        wrapping: self.getListOfElevators(request:context:)
      )

    case "GetMoreInformation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetMoreInformationReply>(),
        interceptors: self.interceptors?.makeGetMoreInformationInterceptors() ?? [],
        wrapping: self.getMoreInformation(request:context:)
      )

    case "GetOpeningTimes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetOpeningTimesRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetOpeningTimesReply>(),
        interceptors: self.interceptors?.makeGetOpeningTimesInterceptors() ?? [],
        wrapping: self.getOpeningTimes(request:context:)
      )

    case "GetUpdateNote":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetUpdateNoteRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetUpdateNoteReply>(),
        interceptors: self.interceptors?.makeGetUpdateNoteInterceptors() ?? [],
        wrapping: self.getUpdateNote(request:context:)
      )

    case "GetStudyRoomList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_GetStudyRoomListReply>(),
        interceptors: self.interceptors?.makeGetStudyRoomListInterceptors() ?? [],
        wrapping: self.getStudyRoomList(request:context:)
      )

    case "GetEventList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetEventListRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetEventListReply>(),
        interceptors: self.interceptors?.makeGetEventListInterceptors() ?? [],
        wrapping: self.getEventList(request:context:)
      )

    case "GetKino":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetKinoRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetKinoReply>(),
        interceptors: self.interceptors?.makeGetKinoInterceptors() ?? [],
        wrapping: self.getKino(request:context:)
      )

    case "SendFeedback":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SendFeedbackRequest>(),
        responseSerializer: ProtobufSerializer<Api_SendFeedbackImageReply>(),
        interceptors: self.interceptors?.makeSendFeedbackInterceptors() ?? [],
        wrapping: self.sendFeedback(request:context:)
      )

    case "SendFeedbackImage":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_SendFeedbackImageRequest>(),
        responseSerializer: ProtobufSerializer<Api_SendFeedbackImageReply>(),
        interceptors: self.interceptors?.makeSendFeedbackImageInterceptors() ?? [],
        wrapping: self.sendFeedbackImage(request:context:)
      )

    case "RegisterDevice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeRegisterDeviceInterceptors() ?? [],
        wrapping: self.registerDevice(request:context:)
      )

    case "VerifyKey":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeVerifyKeyInterceptors() ?? [],
        wrapping: self.verifyKey(request:context:)
      )

    case "DeviceUploadGcmToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Api_TUMCabeStatus>(),
        interceptors: self.interceptors?.makeDeviceUploadGcmTokenInterceptors() ?? [],
        wrapping: self.deviceUploadGcmToken(request:context:)
      )

    case "GetUploadStatus":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetUploadStatusRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetUploadStatusReply>(),
        interceptors: self.interceptors?.makeGetUploadStatusInterceptors() ?? [],
        wrapping: self.getUploadStatus(request:context:)
      )

    case "GetNotification":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NotificationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetNotificationsReply>(),
        interceptors: self.interceptors?.makeGetNotificationInterceptors() ?? [],
        wrapping: self.getNotification(request:context:)
      )

    case "GetNotificationConfirm":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_NotificationsRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetNotificationsConfirmReply>(),
        interceptors: self.interceptors?.makeGetNotificationConfirmInterceptors() ?? [],
        wrapping: self.getNotificationConfirm(request:context:)
      )

    case "GetMembers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetMembersRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetMembersReply>(),
        interceptors: self.interceptors?.makeGetMembersInterceptors() ?? [],
        wrapping: self.getMembers(request:context:)
      )

    case "RegisterIOSDevice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_RegisterIOSDeviceRequest>(),
        responseSerializer: ProtobufSerializer<Api_RegisterIOSDeviceReply>(),
        interceptors: self.interceptors?.makeRegisterIOSDeviceInterceptors() ?? [],
        wrapping: self.registerIOSDevice(request:context:)
      )

    case "RemoveIOSDevice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_RemoveIOSDeviceRequest>(),
        responseSerializer: ProtobufSerializer<Api_RemoveIOSDeviceReply>(),
        interceptors: self.interceptors?.makeRemoveIOSDeviceInterceptors() ?? [],
        wrapping: self.removeIOSDevice(request:context:)
      )

    case "AddIOSDeviceUsage":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_AddIOSDeviceUsageRequest>(),
        responseSerializer: ProtobufSerializer<Api_AddIOSDeviceUsageReply>(),
        interceptors: self.interceptors?.makeAddIOSDeviceUsageInterceptors() ?? [],
        wrapping: self.addIOSDeviceUsage(request:context:)
      )

    default:
      return nil
    }
  }
}

#endif // compiler(>=5.6)

public protocol Api_CampusServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'getTopNews'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTopNewsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTopNewsReply>]

  /// - Returns: Interceptors to use when handling 'getNewsSources'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNewsSourcesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_NewsSourceArray>]

  /// - Returns: Interceptors to use when handling 'searchRooms'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSearchRoomsInterceptors() -> [ServerInterceptor<Api_SearchRoomsRequest, Api_SearchRoomsReply>]

  /// - Returns: Interceptors to use when handling 'getLocations'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetLocationsInterceptors() -> [ServerInterceptor<Api_GetLocationsRequest, Api_GetLocationsReply>]

  /// - Returns: Interceptors to use when handling 'getRoomMaps'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRoomMapsInterceptors() -> [ServerInterceptor<Api_GetRoomMapsRequest, Api_GetRoomMapsReply>]

  /// - Returns: Interceptors to use when handling 'getRoomCoordinates'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRoomCoordinatesInterceptors() -> [ServerInterceptor<Api_GetRoomCoordinatesRequest, Api_GetRoomCoordinatesReply>]

  /// - Returns: Interceptors to use when handling 'getRoomSchedule'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRoomScheduleInterceptors() -> [ServerInterceptor<Api_GetRoomScheduleRequest, Api_GetRoomScheduleReply>]

  /// - Returns: Interceptors to use when handling 'getCafeteriaRatings'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetCafeteriaRatingsInterceptors() -> [ServerInterceptor<Api_CafeteriaRatingRequest, Api_CafeteriaRatingReply>]

  /// - Returns: Interceptors to use when handling 'getDishRatings'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDishRatingsInterceptors() -> [ServerInterceptor<Api_DishRatingRequest, Api_DishRatingReply>]

  /// - Returns: Interceptors to use when handling 'newCafeteriaRating'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeNewCafeteriaRatingInterceptors() -> [ServerInterceptor<Api_NewCafeteriaRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'newDishRating'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeNewDishRatingInterceptors() -> [ServerInterceptor<Api_NewDishRatingRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getAvailableDishTags'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAvailableDishTagsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when handling 'getNameTags'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNameTagsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when handling 'getAvailableCafeteriaTags'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAvailableCafeteriaTagsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetTagsReply>]

  /// - Returns: Interceptors to use when handling 'getCafeterias'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetCafeteriasInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetCafeteriaReply>]

  /// - Returns: Interceptors to use when handling 'getDishes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDishesInterceptors() -> [ServerInterceptor<Api_GetDishesRequest, Api_GetDishesReply>]

  /// - Returns: Interceptors to use when handling 'getResponsiblePerson'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetResponsiblePersonInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetResponsiblePersonReply>]

  /// - Returns: Interceptors to use when handling 'getBuilding2Gps'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetBuilding2GpsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetBuilding2GpsReply>]

  /// - Returns: Interceptors to use when handling 'getAreaFacilitiesByBuildingNr'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAreaFacilitiesByBuildingNrInterceptors() -> [ServerInterceptor<Api_GetAreaFacilitiesByBuildingNrRequest, Api_GetAreaFacilitiesByBuildingNrReply>]

  /// - Returns: Interceptors to use when handling 'getListOfToilets'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetListOfToiletsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfToiletsReply>]

  /// - Returns: Interceptors to use when handling 'getListOfElevators'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetListOfElevatorsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetListOfElevatorsReply>]

  /// - Returns: Interceptors to use when handling 'getMoreInformation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetMoreInformationInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetMoreInformationReply>]

  /// - Returns: Interceptors to use when handling 'getOpeningTimes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetOpeningTimesInterceptors() -> [ServerInterceptor<Api_GetOpeningTimesRequest, Api_GetOpeningTimesReply>]

  /// - Returns: Interceptors to use when handling 'getUpdateNote'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUpdateNoteInterceptors() -> [ServerInterceptor<Api_GetUpdateNoteRequest, Api_GetUpdateNoteReply>]

  /// - Returns: Interceptors to use when handling 'getStudyRoomList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetStudyRoomListInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_GetStudyRoomListReply>]

  /// - Returns: Interceptors to use when handling 'getEventList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetEventListInterceptors() -> [ServerInterceptor<Api_GetEventListRequest, Api_GetEventListReply>]

  /// - Returns: Interceptors to use when handling 'getKino'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetKinoInterceptors() -> [ServerInterceptor<Api_GetKinoRequest, Api_GetKinoReply>]

  /// - Returns: Interceptors to use when handling 'sendFeedback'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSendFeedbackInterceptors() -> [ServerInterceptor<Api_SendFeedbackRequest, Api_SendFeedbackImageReply>]

  /// - Returns: Interceptors to use when handling 'sendFeedbackImage'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSendFeedbackImageInterceptors() -> [ServerInterceptor<Api_SendFeedbackImageRequest, Api_SendFeedbackImageReply>]

  /// - Returns: Interceptors to use when handling 'registerDevice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRegisterDeviceInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when handling 'verifyKey'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVerifyKeyInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when handling 'deviceUploadGcmToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeviceUploadGcmTokenInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Api_TUMCabeStatus>]

  /// - Returns: Interceptors to use when handling 'getUploadStatus'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUploadStatusInterceptors() -> [ServerInterceptor<Api_GetUploadStatusRequest, Api_GetUploadStatusReply>]

  /// - Returns: Interceptors to use when handling 'getNotification'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNotificationInterceptors() -> [ServerInterceptor<Api_NotificationsRequest, Api_GetNotificationsReply>]

  /// - Returns: Interceptors to use when handling 'getNotificationConfirm'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNotificationConfirmInterceptors() -> [ServerInterceptor<Api_NotificationsRequest, Api_GetNotificationsConfirmReply>]

  /// - Returns: Interceptors to use when handling 'getMembers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetMembersInterceptors() -> [ServerInterceptor<Api_GetMembersRequest, Api_GetMembersReply>]

  /// - Returns: Interceptors to use when handling 'registerIOSDevice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRegisterIOSDeviceInterceptors() -> [ServerInterceptor<Api_RegisterIOSDeviceRequest, Api_RegisterIOSDeviceReply>]

  /// - Returns: Interceptors to use when handling 'removeIOSDevice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveIOSDeviceInterceptors() -> [ServerInterceptor<Api_RemoveIOSDeviceRequest, Api_RemoveIOSDeviceReply>]

  /// - Returns: Interceptors to use when handling 'addIOSDeviceUsage'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddIOSDeviceUsageInterceptors() -> [ServerInterceptor<Api_AddIOSDeviceUsageRequest, Api_AddIOSDeviceUsageReply>]
}

public enum Api_CampusServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Campus",
    fullName: "api.Campus",
    methods: [
      Api_CampusServerMetadata.Methods.getTopNews,
      Api_CampusServerMetadata.Methods.getNewsSources,
      Api_CampusServerMetadata.Methods.searchRooms,
      Api_CampusServerMetadata.Methods.getLocations,
      Api_CampusServerMetadata.Methods.getRoomMaps,
      Api_CampusServerMetadata.Methods.getRoomCoordinates,
      Api_CampusServerMetadata.Methods.getRoomSchedule,
      Api_CampusServerMetadata.Methods.getCafeteriaRatings,
      Api_CampusServerMetadata.Methods.getDishRatings,
      Api_CampusServerMetadata.Methods.newCafeteriaRating,
      Api_CampusServerMetadata.Methods.newDishRating,
      Api_CampusServerMetadata.Methods.getAvailableDishTags,
      Api_CampusServerMetadata.Methods.getNameTags,
      Api_CampusServerMetadata.Methods.getAvailableCafeteriaTags,
      Api_CampusServerMetadata.Methods.getCafeterias,
      Api_CampusServerMetadata.Methods.getDishes,
      Api_CampusServerMetadata.Methods.getResponsiblePerson,
      Api_CampusServerMetadata.Methods.getBuilding2Gps,
      Api_CampusServerMetadata.Methods.getAreaFacilitiesByBuildingNr,
      Api_CampusServerMetadata.Methods.getListOfToilets,
      Api_CampusServerMetadata.Methods.getListOfElevators,
      Api_CampusServerMetadata.Methods.getMoreInformation,
      Api_CampusServerMetadata.Methods.getOpeningTimes,
      Api_CampusServerMetadata.Methods.getUpdateNote,
      Api_CampusServerMetadata.Methods.getStudyRoomList,
      Api_CampusServerMetadata.Methods.getEventList,
      Api_CampusServerMetadata.Methods.getKino,
      Api_CampusServerMetadata.Methods.sendFeedback,
      Api_CampusServerMetadata.Methods.sendFeedbackImage,
      Api_CampusServerMetadata.Methods.registerDevice,
      Api_CampusServerMetadata.Methods.verifyKey,
      Api_CampusServerMetadata.Methods.deviceUploadGcmToken,
      Api_CampusServerMetadata.Methods.getUploadStatus,
      Api_CampusServerMetadata.Methods.getNotification,
      Api_CampusServerMetadata.Methods.getNotificationConfirm,
      Api_CampusServerMetadata.Methods.getMembers,
      Api_CampusServerMetadata.Methods.registerIOSDevice,
      Api_CampusServerMetadata.Methods.removeIOSDevice,
      Api_CampusServerMetadata.Methods.addIOSDeviceUsage,
    ]
  )

  public enum Methods {
    public static let getTopNews = GRPCMethodDescriptor(
      name: "GetTopNews",
      path: "/api.Campus/GetTopNews",
      type: GRPCCallType.unary
    )

    public static let getNewsSources = GRPCMethodDescriptor(
      name: "GetNewsSources",
      path: "/api.Campus/GetNewsSources",
      type: GRPCCallType.unary
    )

    public static let searchRooms = GRPCMethodDescriptor(
      name: "SearchRooms",
      path: "/api.Campus/SearchRooms",
      type: GRPCCallType.unary
    )

    public static let getLocations = GRPCMethodDescriptor(
      name: "GetLocations",
      path: "/api.Campus/GetLocations",
      type: GRPCCallType.unary
    )

    public static let getRoomMaps = GRPCMethodDescriptor(
      name: "GetRoomMaps",
      path: "/api.Campus/GetRoomMaps",
      type: GRPCCallType.unary
    )

    public static let getRoomCoordinates = GRPCMethodDescriptor(
      name: "GetRoomCoordinates",
      path: "/api.Campus/GetRoomCoordinates",
      type: GRPCCallType.unary
    )

    public static let getRoomSchedule = GRPCMethodDescriptor(
      name: "GetRoomSchedule",
      path: "/api.Campus/GetRoomSchedule",
      type: GRPCCallType.unary
    )

    public static let getCafeteriaRatings = GRPCMethodDescriptor(
      name: "GetCafeteriaRatings",
      path: "/api.Campus/GetCafeteriaRatings",
      type: GRPCCallType.unary
    )

    public static let getDishRatings = GRPCMethodDescriptor(
      name: "GetDishRatings",
      path: "/api.Campus/GetDishRatings",
      type: GRPCCallType.unary
    )

    public static let newCafeteriaRating = GRPCMethodDescriptor(
      name: "NewCafeteriaRating",
      path: "/api.Campus/NewCafeteriaRating",
      type: GRPCCallType.unary
    )

    public static let newDishRating = GRPCMethodDescriptor(
      name: "NewDishRating",
      path: "/api.Campus/NewDishRating",
      type: GRPCCallType.unary
    )

    public static let getAvailableDishTags = GRPCMethodDescriptor(
      name: "GetAvailableDishTags",
      path: "/api.Campus/GetAvailableDishTags",
      type: GRPCCallType.unary
    )

    public static let getNameTags = GRPCMethodDescriptor(
      name: "GetNameTags",
      path: "/api.Campus/GetNameTags",
      type: GRPCCallType.unary
    )

    public static let getAvailableCafeteriaTags = GRPCMethodDescriptor(
      name: "GetAvailableCafeteriaTags",
      path: "/api.Campus/GetAvailableCafeteriaTags",
      type: GRPCCallType.unary
    )

    public static let getCafeterias = GRPCMethodDescriptor(
      name: "GetCafeterias",
      path: "/api.Campus/GetCafeterias",
      type: GRPCCallType.unary
    )

    public static let getDishes = GRPCMethodDescriptor(
      name: "GetDishes",
      path: "/api.Campus/GetDishes",
      type: GRPCCallType.unary
    )

    public static let getResponsiblePerson = GRPCMethodDescriptor(
      name: "GetResponsiblePerson",
      path: "/api.Campus/GetResponsiblePerson",
      type: GRPCCallType.unary
    )

    public static let getBuilding2Gps = GRPCMethodDescriptor(
      name: "GetBuilding2Gps",
      path: "/api.Campus/GetBuilding2Gps",
      type: GRPCCallType.unary
    )

    public static let getAreaFacilitiesByBuildingNr = GRPCMethodDescriptor(
      name: "GetAreaFacilitiesByBuildingNr",
      path: "/api.Campus/GetAreaFacilitiesByBuildingNr",
      type: GRPCCallType.unary
    )

    public static let getListOfToilets = GRPCMethodDescriptor(
      name: "GetListOfToilets",
      path: "/api.Campus/GetListOfToilets",
      type: GRPCCallType.unary
    )

    public static let getListOfElevators = GRPCMethodDescriptor(
      name: "GetListOfElevators",
      path: "/api.Campus/GetListOfElevators",
      type: GRPCCallType.unary
    )

    public static let getMoreInformation = GRPCMethodDescriptor(
      name: "GetMoreInformation",
      path: "/api.Campus/GetMoreInformation",
      type: GRPCCallType.unary
    )

    public static let getOpeningTimes = GRPCMethodDescriptor(
      name: "GetOpeningTimes",
      path: "/api.Campus/GetOpeningTimes",
      type: GRPCCallType.unary
    )

    public static let getUpdateNote = GRPCMethodDescriptor(
      name: "GetUpdateNote",
      path: "/api.Campus/GetUpdateNote",
      type: GRPCCallType.unary
    )

    public static let getStudyRoomList = GRPCMethodDescriptor(
      name: "GetStudyRoomList",
      path: "/api.Campus/GetStudyRoomList",
      type: GRPCCallType.unary
    )

    public static let getEventList = GRPCMethodDescriptor(
      name: "GetEventList",
      path: "/api.Campus/GetEventList",
      type: GRPCCallType.unary
    )

    public static let getKino = GRPCMethodDescriptor(
      name: "GetKino",
      path: "/api.Campus/GetKino",
      type: GRPCCallType.unary
    )

    public static let sendFeedback = GRPCMethodDescriptor(
      name: "SendFeedback",
      path: "/api.Campus/SendFeedback",
      type: GRPCCallType.unary
    )

    public static let sendFeedbackImage = GRPCMethodDescriptor(
      name: "SendFeedbackImage",
      path: "/api.Campus/SendFeedbackImage",
      type: GRPCCallType.unary
    )

    public static let registerDevice = GRPCMethodDescriptor(
      name: "RegisterDevice",
      path: "/api.Campus/RegisterDevice",
      type: GRPCCallType.unary
    )

    public static let verifyKey = GRPCMethodDescriptor(
      name: "VerifyKey",
      path: "/api.Campus/VerifyKey",
      type: GRPCCallType.unary
    )

    public static let deviceUploadGcmToken = GRPCMethodDescriptor(
      name: "DeviceUploadGcmToken",
      path: "/api.Campus/DeviceUploadGcmToken",
      type: GRPCCallType.unary
    )

    public static let getUploadStatus = GRPCMethodDescriptor(
      name: "GetUploadStatus",
      path: "/api.Campus/GetUploadStatus",
      type: GRPCCallType.unary
    )

    public static let getNotification = GRPCMethodDescriptor(
      name: "GetNotification",
      path: "/api.Campus/GetNotification",
      type: GRPCCallType.unary
    )

    public static let getNotificationConfirm = GRPCMethodDescriptor(
      name: "GetNotificationConfirm",
      path: "/api.Campus/GetNotificationConfirm",
      type: GRPCCallType.unary
    )

    public static let getMembers = GRPCMethodDescriptor(
      name: "GetMembers",
      path: "/api.Campus/GetMembers",
      type: GRPCCallType.unary
    )

    public static let registerIOSDevice = GRPCMethodDescriptor(
      name: "RegisterIOSDevice",
      path: "/api.Campus/RegisterIOSDevice",
      type: GRPCCallType.unary
    )

    public static let removeIOSDevice = GRPCMethodDescriptor(
      name: "RemoveIOSDevice",
      path: "/api.Campus/RemoveIOSDevice",
      type: GRPCCallType.unary
    )

    public static let addIOSDeviceUsage = GRPCMethodDescriptor(
      name: "AddIOSDeviceUsage",
      path: "/api.Campus/AddIOSDeviceUsage",
      type: GRPCCallType.unary
    )
  }
}
